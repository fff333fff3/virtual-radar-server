//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtualRadar.WebSite {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VirtualRadar.WebSite.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;title&gt;Virtual Radar - Aircraft List Diagnostics&lt;/title&gt;
        ///        &lt;script type=&quot;text/javascript&quot; src=&quot;jQuery-1.6.4.js&quot;&gt;&lt;/script&gt;
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            body                    { font-family: Segoe UI, Sans-Serif; font-size: smaller; }
        ///            #containerOuter         { height: 100%; }
        ///            #containerInner         { }
        ///            #parametersPanelOuter   { }
        ///            #parametersPanelInner   { }
        ///            .inputFormTable    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AircraftList_htm {
            get {
                return ResourceManager.GetString("AircraftList_htm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;ReportScreenStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;ReportPrintStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;print&quot; /&gt;
        ///
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;http://maps.google.com/maps/api/js?v=3.10&amp;sensor=false&quot;&gt;&lt;/script&gt;
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;Common.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;Events.js&quot;&gt;&lt;/script&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AircraftReport_htm {
            get {
                return ResourceManager.GetString("AircraftReport_htm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var __IsIpad;
        ///function isIpad()
        ///{
        ///    if(__IsIpad === undefined) __IsIpad = navigator.userAgent.indexOf(&apos;iPad&apos;) !== -1;
        ///    return __IsIpad;
        ///};
        ///
        ///var __IsIphone;
        ///function isIphone()
        ///{
        ///    if(__IsIphone === undefined) __IsIphone = navigator.userAgent.indexOf(&apos;iPhone&apos;) !== -1;
        ///    return __IsIphone;
        ///}
        ///
        ///var __IsAndroid;
        ///function isAndroid()
        ///{
        ///    if(__IsAndroid === undefined) __IsAndroid = navigator.userAgent.indexOf(&apos;Android&apos;) !== -1;
        ///    return __IsAndroid;
        ///}
        ///
        ///function includeJavascript(u [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Common_js {
            get {
                return ResourceManager.GetString("Common_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _Report;
        ///var _Events;
        ///
        ///function initialise()
        ///{
        ///    _Events = new Events();
        ///    _Report = new DateReport();
        ///
        ///    _Report.initialise();
        ///}
        ///
        ///function DateReport()
        ///{
        ///    var that = this.registerSubclass(this);
        ///    var mTitle = null;
        ///
        ///    var mReportFlightsDetail = new ReportFlightsDetail();
        ///    var mReportFlights = new ReportFlights();
        ///
        ///    this.initialiseSubclass = function()
        ///    {
        ///        document.title = &apos;Virtual Radar - Date Report&apos;;
        ///        that.setCriteria(new DateReportCriteria() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DateReport_js {
            get {
                return ResourceManager.GetString("DateReport_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function DateReportCriteria()
        ///{
        ///    var that = this.registerSubclass(this);
        ///
        ///    var mOperator = null;
        ///    var mRegistration = null;
        ///    var mIcao = null;
        ///    var mCountry = null;
        ///    var mWtc = null;
        ///    var mSpecies = null;
        ///    var mIsMilitary = false;
        ///
        ///    this.getOperator = function() { return mOperator; };
        ///    this.setOperator = function(value) { mOperator = value; };
        ///    this.getRegistration = function() { return mRegistration; };
        ///    this.setRegistration = function(value) { mRegistrati [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DateReportCriteria_js {
            get {
                return ResourceManager.GetString("DateReportCriteria_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var EventId = {
        ///    resetTimeOut: 0,
        ///    setAutoSelect: 1,
        ///    acDeselected: 2,
        ///    acSelected: 3,
        ///    acAutoSelected: 4,
        ///    newAircraft: 5,
        ///    acListRefreshed: 6,
        ///    noLongerTracked: 7,
        ///    aircraftDetailRefresh: 8,
        ///    selectClosestClicked: 9,
        ///    toggleAutoSelectClicked: 10,
        ///    listChooseColumnsChanged: 11,
        ///    currentLocationChanged: 12,
        ///    optionsChanged: 13,
        ///    optionsResetMapClicked: 14,
        ///    autoSelectChanged: 15,
        ///    optionsUICreateTabPage: 16,
        ///    reverseGeocodeResponseChang [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Events_js {
            get {
                return ResourceManager.GetString("Events_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;ReportScreenStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;ReportPrintStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;print&quot; /&gt;
        ///
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;http://maps.google.com/maps/api/js?v=3.10&amp;sensor=false&quot;&gt;&lt;/script&gt;
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;Common.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;Events.js&quot;&gt;&lt;/script&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FlightReport_htm {
            get {
                return ResourceManager.GetString("FlightReport_htm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Virtual Radar&lt;/title&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;GoogleMapStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;
        ///
        ///    &lt;script type=&quot;text/javascript&quot;&gt;
        ///        var MapMode = { normal: 0, flightSim: 1, iPhone: 2 };
        ///        var _MapMode = MapMode.__MAP_MODE__;
        ///        var _VrsVersion = &apos;__VRS_VERSION__&apos;;
        ///    &lt;/script&gt;
        ///
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;http://maps.google.com/maps/api/js?v=3.10&amp;sensor=false&quot;&gt;&lt;/script&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMap_htm {
            get {
                return ResourceManager.GetString("GoogleMap_htm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _TheFatController;
        ///
        ///function initialise()
        ///{
        ///    _TheFatController = new FatController();
        ///    _TheFatController.start();
        ///}
        ///
        ///function FatController()
        ///{
        ///    var that = this;
        ///
        ///    var mEvents;
        ///    var mOptions;
        ///    var mOptionsStorage;
        ///    var mOptionsTabPages;
        ///    var mOptionsUI;
        ///    var mCurrentLocation;
        ///    var mCurrentLocationStorage;
        ///    var mCurrentLocationUI;
        ///    var mMap;
        ///    var mMapNorthEast;
        ///    var mMapSouthWest;
        ///    var mMovingMapControl;
        ///    var mMapMovingAutomatically  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMap_js {
            get {
                return ResourceManager.GetString("GoogleMap_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapAircraft(options)
        ///{
        ///    var that = this;
        ///    var mOptions = options;
        ///
        ///    this.Id = 0;
        ///
        ///    this.Icao = &quot;&quot;;
        ///    this.IcaoChanged = true;
        ///    this.Bad = false;
        ///    this.BadChanged = true;
        ///    this.Reg = &quot;&quot;;
        ///    this.RegChanged = true;
        ///    this.Alt = null;
        ///    this.AltChanged = true;
        ///    this.Call = &quot;&quot;;
        ///    this.CallChanged = true;
        ///    this.CallSus = false;
        ///    this.CallSusChanged = true;
        ///    this.Lat = null;
        ///    this.LatChanged = true;
        ///    this.Long = null;
        ///    this.Lo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAircraftCollection_js {
            get {
                return ResourceManager.GetString("GoogleMapAircraftCollection_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var GoogleMapAircraftDetailObjects = [];
        ///
        ///function googleMapAircraftDetailSelectClosest(idx)          { GoogleMapAircraftDetailObjects[idx].selectClosestClicked(); }
        ///function googleMapAircraftDetailStopSelecting(idx)          { GoogleMapAircraftDetailObjects[idx].stopSelectingClicked(); }
        ///function googleMapAircraftDetailToggleAutoSelect(idx)       { GoogleMapAircraftDetailObjects[idx].toggleAutoSelectClicked(); }
        ///function googleMapAircraftDetailToggleReverseGeocode(idx)   { GoogleMapAircraftDetailObjec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAircraftDetail_js {
            get {
                return ResourceManager.GetString("GoogleMapAircraftDetail_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var GoogleMapAircraftListObjects = [];
        ///
        ///function googleMapAircraftListLinkClicked(idx, id)  { GoogleMapAircraftListObjects[idx].listLineClicked(id); };
        ///function googleMapAircraftListPauseClicked(idx)     { GoogleMapAircraftListObjects[idx].togglePauseClicked(); };
        ///
        ///function GoogleMapAircraftList(events, aircraftCollection, options, sidebar)
        ///{
        ///    var that = this;
        ///    var mGlobalIndex = GoogleMapAircraftListObjects.length;
        ///    GoogleMapAircraftListObjects.push(that);
        ///
        ///    var mEvents = events;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAircraftList_js {
            get {
                return ResourceManager.GetString("GoogleMapAircraftList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var ListColumn = {
        ///    OperatorFlag: &apos;A&apos;,
        ///    Registration: &apos;B&apos;,
        ///    Icao: &apos;C&apos;,
        ///    Callsign: &apos;D&apos;,
        ///    Type: &apos;E&apos;,
        ///    Altitude: &apos;F&apos;,
        ///    Squawk: &apos;G&apos;,
        ///    Speed: &apos;H&apos;,
        ///    Silhouette: &apos;I&apos;,
        ///    Latitude: &apos;J&apos;,
        ///    Longitude: &apos;K&apos;,
        ///    Heading: &apos;L&apos;,
        ///    Model: &apos;M&apos;,
        ///    Operator: &apos;N&apos;,
        ///    VerticalSpeed: &apos;O&apos;,
        ///    Distance: &apos;P&apos;,
        ///    Bearing: &apos;Q&apos;,
        ///    FlightLevel: &apos;R&apos;,
        ///    Wtc: &apos;S&apos;,
        ///    Engines: &apos;T&apos;,
        ///    Country: &apos;U&apos;,
        ///    CivOrMil: &apos;V&apos;,
        ///    Species: &apos;W&apos;,
        ///    Picture: &apos;X&apos;,
        ///    TimeTracked: &apos;Y&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAircraftListColumns_js {
            get {
                return ResourceManager.GetString("GoogleMapAircraftListColumns_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapAircraftListOptions(events, aircraftList, aircraftListColumns)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mOptionsUI;
        ///    var mAircraftList = aircraftList;
        ///    var mAircraftListColumns = aircraftListColumns;
        ///
        ///    var mSortField1 = _MapMode !== MapMode.iPhone ? &apos;timeSeen&apos; : &apos;operator&apos;;
        ///    var mSortDirection1 = _MapMode !== MapMode.iPhone ? &apos;desc&apos; : &apos;asc&apos;;
        ///    var mSortField2 = _MapMode !== MapMode.iPhone ? &apos;&apos; : &apos;reg&apos;;
        ///    var mSortDirection2 = &apos;asc&apos;;
        ///    this.getS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAircraftListOptions_js {
            get {
                return ResourceManager.GetString("GoogleMapAircraftListOptions_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var GoogleMapAudioObjects = [];
        ///
        ///function googleMapAudioOnAudioEnded(idx) { GoogleMapAudioObjects[idx].onAudioEnded(); }
        ///
        ///function GoogleMapAudio(map, events, options)
        ///{
        ///    var that = this;
        ///    var mGlobalIndex = GoogleMapAudioObjects.length;
        ///    GoogleMapAudioObjects.push(that);
        ///
        ///    var mMap = map;
        ///    var mEvents = events;
        ///    var mOptions = options;
        ///    var mAudioQueue = [];
        ///    var mVolumeControl;
        ///    var mPlaying = null;
        ///
        ///    var mEnabled = mOptions.svrAudioEnabled &amp;&amp; _MapMode !== Ma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAudio_js {
            get {
                return ResourceManager.GetString("GoogleMapAudio_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var AutoSelectField = { nothing: &apos;-&apos;, altitude: &apos;A&apos;, distance: &apos;D&apos; }
        ///var AutoSelectCondition = { lessThan: &apos;l&apos;, lessThanOrEqual: &apos;L&apos;, equal: &apos;e&apos;, greaterThan: &apos;g&apos;, greaterThanOrEqual: &apos;G&apos; }
        ///
        ///function AutoSelectExpression()
        ///{
        ///    var that = this;
        ///    var mField = AutoSelectField.altitude;
        ///    this.getField = function() { return mField; };
        ///    this.setField = function(value) { mField = value; };
        ///    var mCondition = AutoSelectCondition.lessThanOrEqual;
        ///    this.getCondition = function() { return mCo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapAutoSelect_js {
            get {
                return ResourceManager.GetString("GoogleMapAutoSelect_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _SingletonGoogleMapCurrentLocationUI;
        ///function toggleDisplayCurrentLocation() { _SingletonGoogleMapCurrentLocationUI.toggleDisplay(); }
        ///
        ///function GoogleMapCurrentLocation(events, lat, lng, enabled)
        ///{
        ///    var that = this;
        ///    var mEnabled = enabled;
        ///    var mLat = lat;
        ///    var mLng = lng;
        ///    var mEvents = events;
        ///
        ///    this.getEnabled = function()      { return mEnabled; };
        ///    this.getLat = function()          { return mLat; };
        ///    this.getLng = function()          { return mLng; };
        ///    th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapCurrentLocation_js {
            get {
                return ResourceManager.GetString("GoogleMapCurrentLocation_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapGeolocation(events, map, currentLocation)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mMap = map;
        ///    var mMarker;
        ///    this.getShowMarker = function() { return mMarker === undefined ? false : mMarker.getVisible(); };
        ///    this.setShowMarker = function(value) { if(mMarker !== undefined) mMarker.setVisible(value); };
        ///    var mEnabled = false;
        ///    var mWatchHandle;
        ///    this.getEnabled = function() { return mEnabled; };
        ///    var mLatitude = 0;
        ///    var mLongitude = 0;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapGeolocation_js {
            get {
                return ResourceManager.GetString("GoogleMapGeolocation_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapGotoCurrentLocationButton(events)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mContainer;
        ///
        ///    this.getVisible = function() { return mContainer.style.display === &apos;block&apos;; };
        ///    this.setVisible = function(value) { mContainer.style.display = (value ? &apos;block&apos; : &apos;none&apos;); };
        ///
        ///    this.hide = function() { mContainer.style.display = &apos;none&apos;; }
        ///    this.show = function() { mContainer.style.display = &apos;block&apos;; }
        ///
        ///    this.addToMap = function(map)
        ///    {
        ///        mContainer = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapGotoCurrentLocationButton_js {
            get {
                return ResourceManager.GetString("GoogleMapGotoCurrentLocationButton_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapInfoButton(events, options)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mOptions = options;
        ///    var mPaused = false;
        ///    var mIcon;
        ///
        ///    mEvents.addListener(EventId.optionsChanged, optionsChangedHandler);
        ///    mEvents.addListener(EventId.pauseChanged, pauseChangedHandler);
        ///
        ///    function optionsChangedHandler(sender, args)
        ///    {
        ///        setIconImage();
        ///    };
        ///
        ///    function pauseChangedHandler(sender, args)
        ///    {
        ///        mPaused = args;
        ///        setIconImage();        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapInfoButton_js {
            get {
                return ResourceManager.GetString("GoogleMapInfoButton_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var PinText = {
        ///    None: 0,
        ///    Registration: 1,
        ///    Callsign: 2,
        ///    Type: 3,
        ///    ICAO: 4,
        ///    Squawk: 5,
        ///    OperatorCode: 6,
        ///    Altitude: 7,
        ///    FlightLevel: 8,
        ///    Speed: 9,
        ///    Route: 10
        ///};
        ///
        ///function GoogleMapMarker(options, map, pinClickHandler)
        ///{
        ///    var that = this;
        ///    var mOptions = options;
        ///    var mMap = map;
        ///    var mMarkerOrigin = new google.maps.Point(0, 0);
        ///    var mMarkerSizeAndAnchors = [];
        ///    var mPinClickHandler;
        ///    var mUseMarkerWithLabel = options.isMono;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapMarker_js {
            get {
                return ResourceManager.GetString("GoogleMapMarker_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var GoogleMapMarkerCollectionObjects = [];
        ///
        ///function googleMapMarkerCollection_MarkerClickHandler(event)
        ///{
        ///    if(GoogleMapMarkerCollectionObjects.length != 1) throw(&apos;Only a single map marker collection is supported&apos;);
        ///    GoogleMapMarkerCollectionObjects[0].markerClickHandler(this);
        ///}
        ///
        ///function GoogleMapMarkerCollection(events, map, aircraftCollection, options)
        ///{
        ///    var that = this;
        ///    var mGlobalIndex = GoogleMapMarkerCollectionObjects.length;
        ///    GoogleMapMarkerCollectionObjects.push(that); [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapMarkerCollection_js {
            get {
                return ResourceManager.GetString("GoogleMapMarkerCollection_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapMovingMapControl(events, options)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mContainerElement;
        ///    var mInnerElement;
        ///    var mIconElement;
        ///    var mOptions = options;
        ///    var mVisible = options.showMovingMap;
        ///
        ///    var mChecked = options.movingMapChecked;
        ///    this.getChecked = function() { return mChecked; };
        ///    this.setChecked = function(value)
        ///    {
        ///        mChecked = value;
        ///        refreshState();
        ///        mOptions.movingMapChecked = value;
        ///        mEvent [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapMovingMapControl_js {
            get {
                return ResourceManager.GetString("GoogleMapMovingMapControl_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var TraceType = { JustSelected: 0, All: 1, None: 2 };
        ///var DistanceUnit = { Miles: &apos;0&apos;, Kilometres: &apos;1&apos;, NauticalMiles: &apos;2&apos; };
        ///var HeightUnit = { Feet: &apos;0&apos;, Metres: &apos;1&apos; };
        ///var SpeedUnit = { Knots: &apos;0&apos;, MilesPerHour: &apos;1&apos;, KilometresPerHour: &apos;2&apos; };
        ///
        ///function GoogleMapOptions()
        ///{
        ///    var that = this;
        ///
        ///    // These are all saved to and loaded from cookies
        ///    this.trace = TraceType.JustSelected;
        ///    this.mapLatitude = __INITIAL_LATITUDE;
        ///    this.mapLongitude = __INITIAL_LONGITUDE;
        ///    this.mapType  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapOptions_js {
            get {
                return ResourceManager.GetString("GoogleMapOptions_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var GoogleMapOptionsUIObjects = [];
        ///
        ///function googleMapOptionsUISelectTab(idx, tabIndex) { GoogleMapOptionsUIObjects[idx].selectTab(tabIndex); }
        ///function googleMapOptionsToggleUI(idx)              { GoogleMapOptionsUIObjects[idx].toggleDisplay(); }
        ///function googleMapOptionsUIChanged(idx, tabName)    { GoogleMapOptionsUIObjects[idx].changedHandler(tabName); }
        ///
        ///function GoogleMapOptionsUI(events, options)
        ///{
        ///    var that = this;
        ///    var mGlobalIndex = GoogleMapOptionsUIObjects.length;
        ///    GoogleMapOp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapOptionsUI_js {
            get {
                return ResourceManager.GetString("GoogleMapOptionsUI_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapOutline()
        ///{
        ///    var that = this;
        ///    var mName = &quot;&quot;;
        ///    var mTypeNumber = 0;
        ///    var mOutline = null;
        ///    this.getName = function() { return mName; };
        ///    this.getTypeNumber = function() { return mTypeNumber; };
        ///
        ///    this.parse = function(outline)
        ///    {
        ///        mName = outline.name;
        ///        mTypeNumber = outline.oType;
        ///        var points = [];
        ///        for(var setNumber = 0;setNumber &lt; outline.sets.length;++setNumber) {
        ///            var set = outline.sets[setNumber];
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapOutline_js {
            get {
                return ResourceManager.GetString("GoogleMapOutline_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapReverseGeocode(events)
        ///{
        ///    var that = this;
        ///
        ///    var mEvents = events;
        ///    var mGeocoder = new google.maps.Geocoder();
        ///
        ///    var mConstPositionLookupDisabled = &quot;Position lookup disabled&quot;;
        ///    var mGeocodeEnabled = false;
        ///    var mLastGeocodeAircraft = -1;
        ///    var mLastGeocodeLat;
        ///    var mLastGeocodeLong;
        ///    var mGeocodeInProgress = false;
        ///    var mLastGeocodeResponse = mConstPositionLookupDisabled;
        ///
        ///    this.getLastResponse = function() { return mLastGeocodeResponse; }
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapReverseGeocode_js {
            get {
                return ResourceManager.GetString("GoogleMapReverseGeocode_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapSidebar(events)
        ///{
        ///    var that = this;
        ///
        ///    var mInitialWidth = 390;
        ///    var mMaxWidth = 600;
        ///    var mMargin = 10;
        ///    var mScrollbarMargin = 20;
        ///    var mWidth = mInitialWidth;
        ///    var mVisible = true;
        ///    var mEvents = events;
        ///
        ///    this.getInitialWidth = function() { return mInitialWidth; };
        ///    this.getWidth = function() { return mWidth; };
        ///    this.setWidth = function(value) { mWidth = Math.min(mMaxWidth, Math.max(mInitialWidth, value)); configureCss(); };
        ///    this.getV [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapSidebar_js {
            get {
                return ResourceManager.GetString("GoogleMapSidebar_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html, body                  { margin: 0; padding: 0; background-color: #ffffff; font-family: Tahoma, Sans-Serif; font-size: 10pt; overflow: auto; }
        ///
        ///.googleMapStylesheet        { color: Black; }  /* for ID purposes only, do not use, remove or change */
        ///
        ///A:link                      { color: Blue; text-decoration: none; }
        ///A:visited                   { color: Blue; text-decoration: none; }
        ///A:hover                     { color: Blue; text-decoration: underline; }
        ///A:active                    { color: Blue; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapStylesheet_css {
            get {
                return ResourceManager.GetString("GoogleMapStylesheet_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapTimeout(options, events)
        ///{
        ///    var that = this;
        ///    var mOptions = options;
        ///    var mEvents = events;
        ///    var mIntervalMilliseconds = 12000;
        ///    var mIntervalFraction = 0.2;
        ///
        ///    var mActive = !mOptions.svrIsLocalAddress &amp;&amp; mOptions.svrTimeoutMinutes &gt; 0;
        ///    this.isActive = function() { return mActive; };
        ///    var mTimeout = mOptions.svrTimeoutMinutes;
        ///    var mCountMinutes = 0;
        ///    var mTimedOut = false;
        ///    this.isTimedOut = function() { return mTimedOut; };
        ///
        ///    if(mActiv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapTimeout_js {
            get {
                return ResourceManager.GetString("GoogleMapTimeout_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GoogleMapVolumeControl(events)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mContainerElement;
        ///    var mInnerElement;
        ///    var mVolumeElement;
        ///    var mVolumeUpElement;
        ///    var mVolumeDownElement;
        ///
        ///    var mVolume = 0;
        ///    this.getVolume = function() { return mVolume; };
        ///    this.setVolume = function(value)
        ///    {
        ///        var normalised = Math.max(0, Math.min(100, value));
        ///        if(normalised !== mVolume) {
        ///            mVolume = normalised;
        ///            refreshState();
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GoogleMapVolumeControl_js {
            get {
                return ResourceManager.GetString("GoogleMapVolumeControl_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _Report;
        ///var _Events;
        ///
        ///function initialise()
        ///{
        ///    _Events = new Events();
        ///    _Report = new IcaoReport();
        ///
        ///    _Report.initialise();
        ///}
        ///
        ///function IcaoReport()
        ///{
        ///    var that = this.registerSubclass(this);
        ///
        ///    var mReportAircraftDetail = new ReportAircraftDetail();
        ///    var mReportAircraftFlights = new ReportAircraftFlights();
        ///
        ///    this.initialiseSubclass = function()
        ///    {
        ///        document.title = &apos;Virtual Radar - ICAO Report&apos;;
        ///        that.setCriteria(new IcaoReportCriteria());
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IcaoReport_js {
            get {
                return ResourceManager.GetString("IcaoReport_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function IcaoReportCriteria()
        ///{
        ///    var that = this.registerSubclass(this);
        ///
        ///    var mIcao = null;
        ///
        ///    this.getIcao = function() { return mIcao; };
        ///    this.setIcao = function(value) { mIcao = value; if(mIcao !== null) mIcao = mIcao.toUpperCase(); };
        ///
        ///    this.subclassCopyFromUI = function(form)
        ///    {
        ///        that.setIcao(trim(form.critIcao.value));
        ///    };
        ///
        ///    this.subclassCopyToUI = function(form)
        ///    {
        ///        form.critIcao.value = mIcao === null ? &apos;&apos; : mIcao;
        ///    };
        ///
        ///    this.subclas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IcaoReportCriteria_js {
            get {
                return ResourceManager.GetString("IcaoReportCriteria_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0&quot; /&gt;
        ///    &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;
        ///    &lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;
        ///    &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; /&gt;
        ///    &lt;link rel=&quot;StyleSheet&quot; href=&quot;iPhoneMapStylesheet.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;
        ///    &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;Ima [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMap_htm {
            get {
                return ResourceManager.GetString("iPhoneMap_htm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function iPhoneMapAircraftDetail(events, options, iPhoneMapPages)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mOptions = options;
        ///    var mIPhoneMapPages = iPhoneMapPages;
        ///    var mElements = {};
        ///    var mAircraft = null;
        ///    var mPreviousAircraft = null;
        ///    var mMap;
        ///    var mMarker;
        ///    var mTrail;
        ///    var mLocationKnown = false;
        ///    this.getLocationKnown = function() { return mLocationKnown; };
        ///    this.setLocationKnown = function(value) { mLocationKnown = value; };
        ///
        ///    thi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapAircraftDetail_js {
            get {
                return ResourceManager.GetString("iPhoneMapAircraftDetail_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function iPhoneMapInfoWindow(events, map, iPhoneMapPages, iPhoneAircraftDetail)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mMap = map;
        ///    var mInfoWindow = null;
        ///    var mOnDisplay = false;
        ///    var mDisplayNode;
        ///    var mElements = {};
        ///    var mTrackingAircraft = null;
        ///    var mIPhoneMapPages = iPhoneMapPages;
        ///    var mIPhoneAircraftDetail = iPhoneAircraftDetail;
        ///
        ///    this.initialise = function()
        ///    {
        ///        createDisplayNode();
        ///        mInfoWindow = new google.maps.InfoWind [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapInfoWindow_js {
            get {
                return ResourceManager.GetString("iPhoneMapInfoWindow_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function iPhoneMapOptionsUI(events, options, optionsStorage, aircraftListOptions, iPhoneMapPages)
        ///{
        ///    var that = this;
        ///    var mEvents = events;
        ///    var mOptions = options;
        ///    var mOptionsStorage = optionsStorage;
        ///    var mAircraftListOptions = aircraftListOptions;
        ///    var mIPhoneMapPages = iPhoneMapPages;
        ///    var mForm = null;
        ///    var mDisplayOptionsHandlers = [];
        ///
        ///    this.initialise = function()
        ///    {
        ///        mForm = createElement(&apos;form&apos;, null, null);
        ///        mForm.setAttribute(&apos;name&apos;, &apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapOptionsUI_js {
            get {
                return ResourceManager.GetString("iPhoneMapOptionsUI_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var PageId = {
        ///    map: 0,
        ///    aircraftList: 1,
        ///    aircraftDetail: 2,
        ///    options: 3,
        ///    optionsRefreshPeriod: 4,
        ///    optionsDistanceUnit: 5,
        ///    optionsHeightUnit: 6,
        ///    optionsSpeedUnit: 7,
        ///    optionsPinText1: 8,
        ///    optionsPinText2: 9,
        ///    optionsPinText3: 10,
        ///    optionsSortListColumn1: 11,
        ///    optionsSortListColumn2: 12,
        ///    optionsSortListDir1: 13,
        ///    optionsSortListDir2: 14,
        ///    optionsFilterWtc: 15,
        ///    optionsFilterSpecies: 16,
        ///    optionsFilterEngType: 17,
        ///    _Last: 17
        ///}; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapPages_js {
            get {
                return ResourceManager.GetString("iPhoneMapPages_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var iPhoneMapPlaneListObjects = [];
        ///
        ///function iPhoneMapPlaneList(events, options, iPhoneMapPages, iPhoneAircraftDetail, aircraftCollection)
        ///{
        ///    var that = this;
        ///    var mGlobalIndex = iPhoneMapPlaneListObjects.length;
        ///    iPhoneMapPlaneListObjects.push(that);
        ///    var mEvents = events;
        ///    var mIPhoneMapPages = iPhoneMapPages;
        ///    var mIPhoneAircraftDetail = iPhoneAircraftDetail;
        ///    var mOptions = options;
        ///    var mAircraftCollection = aircraftCollection;
        ///    var mListElement;
        ///    var mPauseE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapPlaneList_js {
            get {
                return ResourceManager.GetString("iPhoneMapPlaneList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html                        { height: 100%; }
        ///body                        { height: 100%; margin: 0px; padding: 0px; }
        ///A:link                      { color: Blue; text-decoration: none; }
        ///A:visited                   { color: Blue; text-decoration: none; }
        ///A:hover                     { color: Blue; text-decoration: underline; }
        ///A:active                    { color: Blue; text-decoration: underline; }
        ///div#map_canvas              { height: 100%; width: 100%; }
        ///
        ///.iPhoneMapStylesheet        { color: Black; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string iPhoneMapStylesheet_css {
            get {
                return ResourceManager.GetString("iPhoneMapStylesheet_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * jQuery JavaScript Library v1.6.4
        /// * http://jquery.com/
        /// *
        /// * Copyright 2011, John Resig
        /// * Dual licensed under the MIT or GPL Version 2 licenses.
        /// * http://jquery.org/license
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// * Copyright 2011, The Dojo Foundation
        /// * Released under the MIT, BSD, and GPL Licenses.
        /// *
        /// * Date: Mon Sep 12 18:54:48 2011 -0400
        /// */
        ///(function( window, undefined ) {
        ///
        ///// Use the correct document accordingly with window argument (sandbox)
        ///var document = window. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jQuery_1_6_4_js {
            get {
                return ResourceManager.GetString("jQuery_1_6_4_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.6.4 http://jquery.com/ | http://jquery.org/license */
        ///(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f(&quot;&lt;&quot;+a+&quot;&gt;&quot;).appendTo(b),e=d.css(&quot;display&quot;);d.remove();if(e===&quot;none&quot;||e===&quot;&quot;){ch||(ch=c.createElement(&quot;iframe&quot;),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode===&quot;CSS1Compat&quot;?&quot;&lt;!doctype html&gt;&quot;:&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jQuery_1_6_4_min_js {
            get {
                return ResourceManager.GetString("jQuery_1_6_4_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function MarkerLabel_(e,t,n){this.marker_=e;this.handCursorURL_=e.handCursorURL;this.labelDiv_=document.createElement(&quot;div&quot;);this.labelDiv_.style.cssText=&quot;position: absolute; overflow: hidden;&quot;;this.eventDiv_=document.createElement(&quot;div&quot;);this.eventDiv_.style.cssText=this.labelDiv_.style.cssText;this.eventDiv_.setAttribute(&quot;onselectstart&quot;,&quot;return false;&quot;);this.eventDiv_.setAttribute(&quot;ondragstart&quot;,&quot;return false;&quot;);this.crossDiv_=MarkerLabel_.getSharedCross(t)}function MarkerWithLabel(e){e=e||{};e.labelConten [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MarkerWithLabel_min_js {
            get {
                return ResourceManager.GetString("MarkerWithLabel_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _Report;
        ///var _Events;
        ///
        ///function initialise()
        ///{
        ///    _Events = new Events();
        ///    _Report = new RegReport();
        ///
        ///    _Report.initialise();
        ///}
        ///
        ///function RegReport()
        ///{
        ///    var that = this.registerSubclass(this);
        ///
        ///    var mReportAircraftDetail = new ReportAircraftDetail();
        ///    var mReportAircraftFlights = new ReportAircraftFlights();
        ///
        ///    this.initialiseSubclass = function()
        ///    {
        ///        document.title = &apos;Virtual Radar - Registration Report&apos;;
        ///        that.setCriteria(new RegReportCriteria()) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RegReport_js {
            get {
                return ResourceManager.GetString("RegReport_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function RegReportCriteria()
        ///{
        ///    var that = this.registerSubclass(this);
        ///
        ///    var mRegistration = null;
        ///
        ///    this.getRegistration = function() { return mRegistration; };
        ///    this.setRegistration = function(value) { mRegistration = value; if(mRegistration !== null) mRegistration = mRegistration.toUpperCase(); };
        ///
        ///    this.subclassCopyFromUI = function(form)
        ///    {
        ///        that.setRegistration(trim(form.critRegistration.value));
        ///    };
        ///
        ///    this.subclassCopyToUI = function(form)
        ///    {
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RegReportCriteria_js {
            get {
                return ResourceManager.GetString("RegReportCriteria_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _CookieExpiryDays = 365;            // Number of days before the cookies expire
        ///
        ///function showHideCriteria()         { _Report.showHideCriteria(); }
        ///function runReportClicked()         { if(_Report !== undefined) _Report.runFreshReport(); return false; }
        ///function displayPath(flightIndex)   { _Report.displayPath(flightIndex); }
        ///function togglePageControlOptions() { _Report.togglePageControlOptions(); }
        ///function goFirstPage()              { _Report.goFirstPage(); }
        ///function goLastPage()             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Report_js {
            get {
                return ResourceManager.GetString("Report_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportAircraftDetail()
        ///{
        ///    var that = this;
        ///    this.registerSubclass = function(value) { that = value; return value; };
        ///    var mReportDescription = null;
        ///    var mShowLinksToAircraftReports = false;
        ///    this.setShowLinksToAircraftReports = function(value) { mShowLinksToAircraftReports = value; };
        ///
        ///    this.clear = function()
        ///    {
        ///        document.getElementById(&apos;aircraftDetail&apos;).innerHTML = &apos;&apos;;
        ///    };
        ///
        ///    this.showDetail = function(aircraft)
        ///    {
        ///        var html = &apos;&apos;;
        ///
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportAircraftDetail_js {
            get {
                return ResourceManager.GetString("ReportAircraftDetail_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportAircraftFlights()
        ///{
        ///    var that = this;
        ///
        ///    _Events.addListener(EventId.displayFlightPath, displayFlightPathHandler);
        ///
        ///    this.showFlights = function(reportContent)
        ///    {
        ///        var flights = reportContent.flights;
        ///        var airports = reportContent.airports;
        ///        var routes = reportContent.routes;
        ///        var groupBy = reportContent.groupBy;
        ///
        ///        var html = &apos;&apos;;
        ///        var documentElement = document.getElementById(&apos;flights&apos;);
        ///        documentElement.innerHTML = &quot;&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportAircraftFlights_js {
            get {
                return ResourceManager.GetString("ReportAircraftFlights_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportCriteria()
        ///{
        ///    var that = this;
        ///    this.registerSubclass = function(value) { that = value; return value; }
        ///
        ///    var mFromDate = null;
        ///    var mToDate = null;
        ///    var mCallsign = null;
        ///    var mIsEmergency = null;
        ///
        ///    var mSortField1 = &apos;date&apos;;
        ///    var mSortField1Direction = &apos;desc&apos;;
        ///    var mSortField2 = &apos;&apos;;
        ///    var mSortField2Direction = &apos;asc&apos;;
        ///
        ///    this.getFromDate = function() { return mFromDate; };
        ///    this.setFromDate = function(value) { mFromDate = value !== &apos;&apos; ? value [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportCriteria_js {
            get {
                return ResourceManager.GetString("ReportCriteria_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var ReportFlightsColumn = {
        ///    RowNumber: 1,
        ///    Date: 2,
        ///    Time: 3,
        ///    ICAO: 4,
        ///    Reg: 5,
        ///    Type: 6,
        ///    Model: 7,
        ///    Callsign: 8,
        ///    From: 9,
        ///    Via: 10,
        ///    To: 11,
        ///    Operator: 12,
        ///    ModeSCountry: 13,
        ///    Species: 14,
        ///    Military: 15
        ///};
        ///
        ///function ReportFlights()
        ///{
        ///    var that = this;
        ///    var mColumns = [];
        ///    var mIsCallsignReport = false;
        ///
        ///    function createColumns(groupBy)
        ///    {
        ///        mColumns = [];
        ///        mColumns.push(ReportFlightsColumn.RowNumber);
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportFlights_js {
            get {
                return ResourceManager.GetString("ReportFlights_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportFlightsDetail()
        ///{
        ///    var that = this.registerSubclass(this);
        ///    var mFlight = null;
        ///    var mRoute = null;
        ///
        ///    this.setShowLinksToAircraftReports(true);
        ///
        ///    this.showFlightsDetail = function(flight, aircraft, route)
        ///    {
        ///        mFlight = flight;
        ///        mRoute = route;
        ///        that.showDetail(aircraft);
        ///    };
        ///
        ///    this.subclassAddToEndOfOtherTable = function()
        ///    {
        ///        var html = &apos;&apos;;
        ///        var duration = reportDuration(mFlight.start, mFlight.end);
        ///
        ///        va [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportFlightsDetail_js {
            get {
                return ResourceManager.GetString("ReportFlightsDetail_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _InitialLatitude = __INITIAL_LATITUDE;
        ///var _InitialLongitude = __INITIAL_LONGITUDE;
        ///var _InitialMapType = google.maps.MapTypeId.__INITIAL_MAPTYPE;
        ///var _InitialZoom = __INITIAL_ZOOM;
        ///
        ///function ReportMap(cookieSuffix)
        ///{
        ///    var that = this;
        ///    var mCookieSuffix = cookieSuffix;
        ///    var mMapLatitude = _InitialLatitude;
        ///    var mMapLongitude = _InitialLongitude;
        ///    var mMapType = _InitialMapType;
        ///    var mMapZoom = _InitialZoom;
        ///    var mMap = null;
        ///    var mStartPin = null;
        ///    var mEndPin  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportMap_js {
            get {
                return ResourceManager.GetString("ReportMap_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportPageControl(cookieSuffix)
        ///{
        ///    var that = this;
        ///    var mCookieSuffix = cookieSuffix;
        ///    var mTotalRows = 0;
        ///    var mFirstRow = 0;
        ///    var mRowsPerPage = 25;
        ///    var mMaxElements = 5;
        ///    var mOptionsPrefix = &apos;pageControlOptions&apos;;
        ///    var mOptionsFormPrefix = &apos;pageControlOptionsForm&apos;;
        ///    var mOptionsShowHidePrefix = &apos;pageControlToggleOptions&apos;;
        ///    var mShowAllRows = false;
        ///
        ///    loadCookies();
        ///
        ///    this.getTotalRows = function() { return mTotalRows; };
        ///    this.setTotalRows [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportPageControl_js {
            get {
                return ResourceManager.GetString("ReportPageControl_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html, body          { margin: 0; padding: 0; background-color: #ffffff; font-family: Tahoma, Sans-Serif; font-size: 10pt; }
        ///
        ///#frTopHalf          { display: none; }
        ///
        ///div#container       { }
        ///div#sidebar_canvas  { }
        ///div#map_canvas      { display: none; }
        ///
        ///.toggleCriteria         { display: none; }
        ///div#criteria            { display: none; }
        ///
        ///div#waitAnimation       { display: none; }
        ///div#errorText           { font-size: 12pt; background-color: Red; color: White; text-align: center; margin-left: auto [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportPrintStylesheet_css {
            get {
                return ResourceManager.GetString("ReportPrintStylesheet_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ReportRowProvider()
        ///{
        ///    var that = this;
        ///    var mXHR = new XHR();
        ///    var mFetchListeners = [];
        ///    var mReportId = &quot;&quot;;
        ///    var mCriteriaText = &quot;&quot;;
        ///
        ///    this.addFetchListener = function(address) { mFetchListeners.push(address); };
        ///    this.getReportId = function() { return mReportId; };
        ///    this.setReportId = function(value) { mReportId = value; };
        ///    this.getCriteriaText = function() { return mCriteriaText; };
        ///    this.setCriteriaText = function(value) { mCriteriaText = value; };
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportRowProvider_js {
            get {
                return ResourceManager.GetString("ReportRowProvider_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html, body              { margin: 0; padding: 0; background-color: #ffffff; font-family: Tahoma, Sans-Serif; font-size: 10pt; height: 100%; overflow: auto; }
        ///
        ///.frBody                 { overflow: auto; }
        ///
        ///#frWhole                { height: 100%; }
        ///#frTopHalf              { height: 45%; width: 100%; }
        ///#frBottomHalf           { height: 55%; width: 100%; overflow: auto; }
        ///
        ///#map_container          { float: left; width: 100%; height: 100%; }
        ///#map_canvas             { height: 100%; margin-right: 435px; }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReportScreenStylesheet_css {
            get {
                return ResourceManager.GetString("ReportScreenStylesheet_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ServerConfig
        ///{
        ///    this.mapLatitude = __INITIAL_LATITUDE;
        ///    this.mapLongitude = __INITIAL_LONGITUDE;
        ///    this.mapType = google.maps.MapTypeId.__INITIAL_MAPTYPE;
        ///    this.mapZoom = __INITIAL_ZOOM;
        ///    this.refreshSeconds = __INITIAL_REFRESHSECONDS;
        ///    this.distanceUnit = __INITIAL_DISTANCE_UNIT;
        ///    this.heightUnit = __INITIAL_HEIGHT_UNIT;
        ///    this.speedUnit = __INITIAL_SPEED_UNIT;
        ///    this.isMono = __IS_MONO;
        ///    this.svrInitialLatitude = __INITIAL_LATITUDE;
        ///    this.svrInitialLongit [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServerConfig_js {
            get {
                return ResourceManager.GetString("ServerConfig_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // An object that wraps a reusable XMLHttpRequest object for us.
        ///function XHR()
        ///{
        ///    var that = this;
        ///    var mXhr = null;
        ///    var mTimeSent = null;
        ///    var mPeekInterval = 50;
        ///    var mTimeoutAt = 0;
        ///    var mInFlight = false;
        ///    var mCallback;
        ///    var mTimer = null;
        ///    var mTimeoutCallback = null;
        ///
        ///    this.getTimeSent = function() { return mTimeSent; };
        ///    this.setTimeoutCallback = function(value) { mTimeoutCallback = value; };
        ///
        ///    function createXhr()
        ///    {
        ///        var result = nu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XHR_js {
            get {
                return ResourceManager.GetString("XHR_js", resourceCulture);
            }
        }
    }
}
